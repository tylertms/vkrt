#version 460
#extension GL_EXT_ray_tracing : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba32f) uniform image2D image;

layout(binding = 4, set = 0) uniform SceneUniform {
    mat4 viewInverse;
    mat4 projInverse;
    uint frame;
} cam;

struct Material {
    vec3 color;
    float roughness;
    vec3 emissiveColor;
    float emissiveStrength;
};

layout(set = 0, binding = 6, std430) readonly buffer MaterialBuffer {
    Material materials[];
} materialBuffer;

layout(location = 0) rayPayloadEXT vec3 hitValue;

void main()  {
    vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec3 origin = (cam.viewInverse * vec4(0.0, 0.0, 0.0, 1.0)).xyz;

    vec4 viewDir = cam.projInverse * vec4(d.x, d.y, 1.0, 1.0);
    vec3 dir = normalize((cam.viewInverse * vec4(viewDir.xyz, 0.0)).xyz);

    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xFF, 0, 0, 0, origin, 0.001, dir, 10000.0, 0);
    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 0.0));
}
